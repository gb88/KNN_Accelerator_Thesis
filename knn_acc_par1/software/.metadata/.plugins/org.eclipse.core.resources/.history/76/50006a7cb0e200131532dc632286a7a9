/*
 * hello.c
 *
 *  Created on: 7 mai 2012
 *      Author: mpbraend
 */

#include "stdio.h"
#include "system.h"
#ifndef NULL
#define NULL   ((void *) 0)
#endif

#include <string.h>
#include "altera_avalon_pio_regs.h"
#include <unistd.h>
#include "altera_avalon_performance_counter.h"
#include "altera_avalon_dma.h"
#include "fx2.h"
#include <sys/alt_dma.h>


static volatile int txrx_done = 0;
static void txrxDone(void * handle, void * data)
{
    txrx_done = 1;
}
int main()
{

	int i = 1;
	fx2_struct usb_fx;
	unsigned char ledvalue = 1;
	long int addr = 0;
	alt_u16 read = 0;
	alt_u64 count = 0;
	alt_u16 count_usb = 0;
	alt_dma_txchan txchan;
    alt_dma_rxchan rxchan;


    void* tx_data = (void*)SDRAM_0_BASE; /* pointer to data to send */
    void* rx_buffer = (void*)(SDRAM_0_BASE+0x10); /* pointer to rx buffer */

	//printf("Hello\n");
	int k = 0;
	//initialize the SDRAM
	PERF_RESET(PERFORMANCE_COUNTER_0_BASE);
	PERF_START_MEASURING(PERFORMANCE_COUNTER_0_BASE);

	for (addr=0;addr<33554432;addr+=4)
		IOWR_32DIRECT(SDRAM_0_BASE,addr,addr);
	addr = 0;

	//for (addr=0;addr<4096;addr+=4)
	//	IOWR_32DIRECT(CUSTOM_RAM_0_BASE,addr,addr);

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, ledvalue);
	//txchan = alt_dma_txchan_open("/dev/dma_0");
	//rxchan = alt_dma_rxchan_open("/dev/dma_0");

	//for (addr=0;addr<33554432;addr+=4)
	//for (addr=0;addr<8388592;addr+=0x10)
	//{
		txchan = alt_dma_txchan_open("/dev/dma_0");
		rxchan = alt_dma_rxchan_open("/dev/dma_0");
		alt_dma_txchan_ioctl(txchan, ALT_DMA_SET_MODE_32, NULL);
		alt_dma_rxchan_ioctl(rxchan, ALT_DMA_SET_MODE_32, NULL);
		txrx_done = 0;
		tx_data = (void*)(SDRAM_0_BASE); /* pointer to data to send */
		rx_buffer = (void*)(DMA_0_WRITE_MASTER_TMEM_CACHE_0_BASE);//CUSTOM_RAM_0_BASE
		printf("Write in Ram\n");
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE,1);
		alt_dma_txchan_send (txchan,tx_data,0x1000,NULL,NULL);
		alt_dma_rxchan_prepare (rxchan,rx_buffer,0x1000, txrxDone,NULL);
		while (!txrx_done);
		PERF_END(PERFORMANCE_COUNTER_0_BASE,1);
		alt_dma_txchan_close(txchan);
		alt_dma_rxchan_close(rxchan);

/* commento da qui
		txchan = alt_dma_txchan_open("/dev/dma_0");
		rxchan = alt_dma_rxchan_open("/dev/dma_0");
		txrx_done = 0;
		tx_data = (void*)(SDRAM_0_BASE+0x20); /* pointer to data to send */
		/*rx_buffer = (void*)(SDRAM_0_BASE+addr+0x40);
		alt_dma_txchan_send (txchan,tx_data,0x20,NULL,NULL);
		alt_dma_rxchan_prepare (rxchan,rx_buffer,0x20, txrxDone,NULL);
		while (!txrx_done);
		alt_dma_txchan_close(txchan);
		alt_dma_rxchan_close(rxchan);*/
	//}
	//for (addr=0;addr<33554432;addr+=4)
	//		read = IORD_32DIRECT(SDRAM_0_BASE,addr);



	count = perf_get_section_time(PERFORMANCE_COUNTER_0_BASE,1);
	ledvalue++;
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, ledvalue);
	while (1)
	{
		//if (i % 50 == 0)
		printf("LSByte %d \n", count & 0xFFFF);
		count = count>>16;
		printf("2 Byte %d \n", count & 0xFFFF);
		count = count>>16;
		printf("3 Byte %d \n", count & 0xFFFF);
		count = count>>16;
		printf("Last Byte %d \n", count & 0xFFFF);


		// Set the LED output
		ledvalue =  i;
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, ledvalue);
		/*while(IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0002)& 0x0001);
		IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0006,0x0003);
		//IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0000,(unsigned int) 0xF2F2);
		for(k=0;k<256;k++)
		{
			count_usb = count & 0xFFFF;
			//IOWR_32DIRECT(SDRAM_0_BASE, 0X000000,17);
			//IOWR_32DIRECT(SDRAM_0_BASE, 0X000004,18);
			while(IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0002)& 0x0001);
			IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0006,0x0002);
			IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0004,(unsigned int) 0x0002);
			while(IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0002)& 0x0001);
			//read = IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0000);
			read = IORD_32DIRECT(SDRAM_0_BASE, addr);

			//write

			IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0006,0x0003);
			while(IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0002)& 0x0001);
			IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0000,(unsigned int) count);
			IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0004,(unsigned int) 0x0001);
			//IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0000,(unsigned int) 1);
			//IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0004,(unsigned int) 0x0001);
			//IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0008,0x0003);
			addr+=4;
			count = count>>16;
			usleep(10);
		}

	//	while(IORD_16DIRECT(USBFIFOCTRL_0_BASE,0x0002)& 0x0001);
		//IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0000,(unsigned int) 0x1234);
	//	IOWR_16DIRECT(USBFIFOCTRL_0_BASE,0x0004,(unsigned int) 0x0005);

		//fx2_write(&usb_fx, (int)FX2_EP4, (int) 0xFF);
		//IOWR_ALTERA_AVALON_PIO_DATA(USBFIFOCTRL_0_BASE,usb_fx.data);
		i++; togliere qui */

		usleep(100);
	}

	return 0;
}
